{"id":"../node_modules/highlight.js/lib/languages/arduino.js","dependencies":[{"name":"C:\\home\\JS_practice\\package.json","includedInParent":true,"mtime":1559541468139},{"name":"C:\\home\\JS_practice\\node_modules\\highlight.js\\package.json","includedInParent":true,"mtime":1559541462771}],"generated":{"js":"module.exports = function(hljs) {\r\n  var CPP = hljs.getLanguage('cpp').exports;\r\n\treturn {\r\n    keywords: {\r\n      keyword:\r\n        'boolean byte word string String array ' + CPP.keywords.keyword,\r\n      built_in:\r\n        'setup loop while catch for if do goto try switch case else ' +\r\n        'default break continue return ' +\r\n        'KeyboardController MouseController SoftwareSerial ' +\r\n        'EthernetServer EthernetClient LiquidCrystal ' +\r\n        'RobotControl GSMVoiceCall EthernetUDP EsploraTFT ' +\r\n        'HttpClient RobotMotor WiFiClient GSMScanner ' +\r\n        'FileSystem Scheduler GSMServer YunClient YunServer ' +\r\n        'IPAddress GSMClient GSMModem Keyboard Ethernet ' +\r\n        'Console GSMBand Esplora Stepper Process ' +\r\n        'WiFiUDP GSM_SMS Mailbox USBHost Firmata PImage ' +\r\n        'Client Server GSMPIN FileIO Bridge Serial ' +\r\n        'EEPROM Stream Mouse Audio Servo File Task ' +\r\n        'GPRS WiFi Wire TFT GSM SPI SD ' +\r\n        'runShellCommandAsynchronously analogWriteResolution ' +\r\n        'retrieveCallingNumber printFirmwareVersion ' +\r\n        'analogReadResolution sendDigitalPortPair ' +\r\n        'noListenOnLocalhost readJoystickButton setFirmwareVersion ' +\r\n        'readJoystickSwitch scrollDisplayRight getVoiceCallStatus ' +\r\n        'scrollDisplayLeft writeMicroseconds delayMicroseconds ' +\r\n        'beginTransmission getSignalStrength runAsynchronously ' +\r\n        'getAsynchronously listenOnLocalhost getCurrentCarrier ' +\r\n        'readAccelerometer messageAvailable sendDigitalPorts ' +\r\n        'lineFollowConfig countryNameWrite runShellCommand ' +\r\n        'readStringUntil rewindDirectory readTemperature ' +\r\n        'setClockDivider readLightSensor endTransmission ' +\r\n        'analogReference detachInterrupt countryNameRead ' +\r\n        'attachInterrupt encryptionType readBytesUntil ' +\r\n        'robotNameWrite readMicrophone robotNameRead cityNameWrite ' +\r\n        'userNameWrite readJoystickY readJoystickX mouseReleased ' +\r\n        'openNextFile scanNetworks noInterrupts digitalWrite ' +\r\n        'beginSpeaker mousePressed isActionDone mouseDragged ' +\r\n        'displayLogos noAutoscroll addParameter remoteNumber ' +\r\n        'getModifiers keyboardRead userNameRead waitContinue ' +\r\n        'processInput parseCommand printVersion readNetworks ' +\r\n        'writeMessage blinkVersion cityNameRead readMessage ' +\r\n        'setDataMode parsePacket isListening setBitOrder ' +\r\n        'beginPacket isDirectory motorsWrite drawCompass ' +\r\n        'digitalRead clearScreen serialEvent rightToLeft ' +\r\n        'setTextSize leftToRight requestFrom keyReleased ' +\r\n        'compassRead analogWrite interrupts WiFiServer ' +\r\n        'disconnect playMelody parseFloat autoscroll ' +\r\n        'getPINUsed setPINUsed setTimeout sendAnalog ' +\r\n        'readSlider analogRead beginWrite createChar ' +\r\n        'motorsStop keyPressed tempoWrite readButton ' +\r\n        'subnetMask debugPrint macAddress writeGreen ' +\r\n        'randomSeed attachGPRS readString sendString ' +\r\n        'remotePort releaseAll mouseMoved background ' +\r\n        'getXChange getYChange answerCall getResult ' +\r\n        'voiceCall endPacket constrain getSocket writeJSON ' +\r\n        'getButton available connected findUntil readBytes ' +\r\n        'exitValue readGreen writeBlue startLoop IPAddress ' +\r\n        'isPressed sendSysex pauseMode gatewayIP setCursor ' +\r\n        'getOemKey tuneWrite noDisplay loadImage switchPIN ' +\r\n        'onRequest onReceive changePIN playFile noBuffer ' +\r\n        'parseInt overflow checkPIN knobRead beginTFT ' +\r\n        'bitClear updateIR bitWrite position writeRGB ' +\r\n        'highByte writeRed setSpeed readBlue noStroke ' +\r\n        'remoteIP transfer shutdown hangCall beginSMS ' +\r\n        'endWrite attached maintain noCursor checkReg ' +\r\n        'checkPUK shiftOut isValid shiftIn pulseIn ' +\r\n        'connect println localIP pinMode getIMEI ' +\r\n        'display noBlink process getBand running beginSD ' +\r\n        'drawBMP lowByte setBand release bitRead prepare ' +\r\n        'pointTo readRed setMode noFill remove listen ' +\r\n        'stroke detach attach noTone exists buffer ' +\r\n        'height bitSet circle config cursor random ' +\r\n        'IRread setDNS endSMS getKey micros ' +\r\n        'millis begin print write ready flush width ' +\r\n        'isPIN blink clear press mkdir rmdir close ' +\r\n        'point yield image BSSID click delay ' +\r\n        'read text move peek beep rect line open ' +\r\n        'seek fill size turn stop home find ' +\r\n        'step tone sqrt RSSI SSID ' +\r\n        'end bit tan cos sin pow map abs max ' +\r\n        'min get run put',\r\n      literal:\r\n        'DIGITAL_MESSAGE FIRMATA_STRING ANALOG_MESSAGE ' +\r\n        'REPORT_DIGITAL REPORT_ANALOG INPUT_PULLUP ' +\r\n        'SET_PIN_MODE INTERNAL2V56 SYSTEM_RESET LED_BUILTIN ' +\r\n        'INTERNAL1V1 SYSEX_START INTERNAL EXTERNAL ' +\r\n        'DEFAULT OUTPUT INPUT HIGH LOW'\r\n    },\r\n    contains: [\r\n      CPP.preprocessor,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.C_NUMBER_MODE\r\n    ]\r\n  };\r\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/arduino.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}}],"sources":{"../node_modules/highlight.js/lib/languages/arduino.js":"module.exports = function(hljs) {\r\n  var CPP = hljs.getLanguage('cpp').exports;\r\n\treturn {\r\n    keywords: {\r\n      keyword:\r\n        'boolean byte word string String array ' + CPP.keywords.keyword,\r\n      built_in:\r\n        'setup loop while catch for if do goto try switch case else ' +\r\n        'default break continue return ' +\r\n        'KeyboardController MouseController SoftwareSerial ' +\r\n        'EthernetServer EthernetClient LiquidCrystal ' +\r\n        'RobotControl GSMVoiceCall EthernetUDP EsploraTFT ' +\r\n        'HttpClient RobotMotor WiFiClient GSMScanner ' +\r\n        'FileSystem Scheduler GSMServer YunClient YunServer ' +\r\n        'IPAddress GSMClient GSMModem Keyboard Ethernet ' +\r\n        'Console GSMBand Esplora Stepper Process ' +\r\n        'WiFiUDP GSM_SMS Mailbox USBHost Firmata PImage ' +\r\n        'Client Server GSMPIN FileIO Bridge Serial ' +\r\n        'EEPROM Stream Mouse Audio Servo File Task ' +\r\n        'GPRS WiFi Wire TFT GSM SPI SD ' +\r\n        'runShellCommandAsynchronously analogWriteResolution ' +\r\n        'retrieveCallingNumber printFirmwareVersion ' +\r\n        'analogReadResolution sendDigitalPortPair ' +\r\n        'noListenOnLocalhost readJoystickButton setFirmwareVersion ' +\r\n        'readJoystickSwitch scrollDisplayRight getVoiceCallStatus ' +\r\n        'scrollDisplayLeft writeMicroseconds delayMicroseconds ' +\r\n        'beginTransmission getSignalStrength runAsynchronously ' +\r\n        'getAsynchronously listenOnLocalhost getCurrentCarrier ' +\r\n        'readAccelerometer messageAvailable sendDigitalPorts ' +\r\n        'lineFollowConfig countryNameWrite runShellCommand ' +\r\n        'readStringUntil rewindDirectory readTemperature ' +\r\n        'setClockDivider readLightSensor endTransmission ' +\r\n        'analogReference detachInterrupt countryNameRead ' +\r\n        'attachInterrupt encryptionType readBytesUntil ' +\r\n        'robotNameWrite readMicrophone robotNameRead cityNameWrite ' +\r\n        'userNameWrite readJoystickY readJoystickX mouseReleased ' +\r\n        'openNextFile scanNetworks noInterrupts digitalWrite ' +\r\n        'beginSpeaker mousePressed isActionDone mouseDragged ' +\r\n        'displayLogos noAutoscroll addParameter remoteNumber ' +\r\n        'getModifiers keyboardRead userNameRead waitContinue ' +\r\n        'processInput parseCommand printVersion readNetworks ' +\r\n        'writeMessage blinkVersion cityNameRead readMessage ' +\r\n        'setDataMode parsePacket isListening setBitOrder ' +\r\n        'beginPacket isDirectory motorsWrite drawCompass ' +\r\n        'digitalRead clearScreen serialEvent rightToLeft ' +\r\n        'setTextSize leftToRight requestFrom keyReleased ' +\r\n        'compassRead analogWrite interrupts WiFiServer ' +\r\n        'disconnect playMelody parseFloat autoscroll ' +\r\n        'getPINUsed setPINUsed setTimeout sendAnalog ' +\r\n        'readSlider analogRead beginWrite createChar ' +\r\n        'motorsStop keyPressed tempoWrite readButton ' +\r\n        'subnetMask debugPrint macAddress writeGreen ' +\r\n        'randomSeed attachGPRS readString sendString ' +\r\n        'remotePort releaseAll mouseMoved background ' +\r\n        'getXChange getYChange answerCall getResult ' +\r\n        'voiceCall endPacket constrain getSocket writeJSON ' +\r\n        'getButton available connected findUntil readBytes ' +\r\n        'exitValue readGreen writeBlue startLoop IPAddress ' +\r\n        'isPressed sendSysex pauseMode gatewayIP setCursor ' +\r\n        'getOemKey tuneWrite noDisplay loadImage switchPIN ' +\r\n        'onRequest onReceive changePIN playFile noBuffer ' +\r\n        'parseInt overflow checkPIN knobRead beginTFT ' +\r\n        'bitClear updateIR bitWrite position writeRGB ' +\r\n        'highByte writeRed setSpeed readBlue noStroke ' +\r\n        'remoteIP transfer shutdown hangCall beginSMS ' +\r\n        'endWrite attached maintain noCursor checkReg ' +\r\n        'checkPUK shiftOut isValid shiftIn pulseIn ' +\r\n        'connect println localIP pinMode getIMEI ' +\r\n        'display noBlink process getBand running beginSD ' +\r\n        'drawBMP lowByte setBand release bitRead prepare ' +\r\n        'pointTo readRed setMode noFill remove listen ' +\r\n        'stroke detach attach noTone exists buffer ' +\r\n        'height bitSet circle config cursor random ' +\r\n        'IRread setDNS endSMS getKey micros ' +\r\n        'millis begin print write ready flush width ' +\r\n        'isPIN blink clear press mkdir rmdir close ' +\r\n        'point yield image BSSID click delay ' +\r\n        'read text move peek beep rect line open ' +\r\n        'seek fill size turn stop home find ' +\r\n        'step tone sqrt RSSI SSID ' +\r\n        'end bit tan cos sin pow map abs max ' +\r\n        'min get run put',\r\n      literal:\r\n        'DIGITAL_MESSAGE FIRMATA_STRING ANALOG_MESSAGE ' +\r\n        'REPORT_DIGITAL REPORT_ANALOG INPUT_PULLUP ' +\r\n        'SET_PIN_MODE INTERNAL2V56 SYSTEM_RESET LED_BUILTIN ' +\r\n        'INTERNAL1V1 SYSEX_START INTERNAL EXTERNAL ' +\r\n        'DEFAULT OUTPUT INPUT HIGH LOW'\r\n    },\r\n    contains: [\r\n      CPP.preprocessor,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.C_NUMBER_MODE\r\n    ]\r\n  };\r\n};"},"lineCount":99}},"error":null,"hash":"468a3b10a6f9f9b79edd944029e47e78","cacheData":{"env":{}}}