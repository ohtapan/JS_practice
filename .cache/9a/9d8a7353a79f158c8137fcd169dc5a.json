{"id":"../node_modules/highlight.js/lib/languages/mizar.js","dependencies":[{"name":"C:\\home\\JS_practice\\package.json","includedInParent":true,"mtime":1559541468139},{"name":"C:\\home\\JS_practice\\node_modules\\highlight.js\\package.json","includedInParent":true,"mtime":1559541462771}],"generated":{"js":"module.exports = function(hljs) {\r\n  return {\r\n    keywords:\r\n      'environ vocabularies notations constructors definitions ' +\r\n      'registrations theorems schemes requirements begin end definition ' +\r\n      'registration cluster existence pred func defpred deffunc theorem ' +\r\n      'proof let take assume then thus hence ex for st holds consider ' +\r\n      'reconsider such that and in provided of as from be being by means ' +\r\n      'equals implies iff redefine define now not or attr is mode ' +\r\n      'suppose per cases set thesis contradiction scheme reserve struct ' +\r\n      'correctness compatibility coherence symmetry assymetry ' +\r\n      'reflexivity irreflexivity connectedness uniqueness commutativity ' +\r\n      'idempotence involutiveness projectivity',\r\n    contains: [\r\n      hljs.COMMENT('::', '$')\r\n    ]\r\n  };\r\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/mizar.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}}],"sources":{"../node_modules/highlight.js/lib/languages/mizar.js":"module.exports = function(hljs) {\r\n  return {\r\n    keywords:\r\n      'environ vocabularies notations constructors definitions ' +\r\n      'registrations theorems schemes requirements begin end definition ' +\r\n      'registration cluster existence pred func defpred deffunc theorem ' +\r\n      'proof let take assume then thus hence ex for st holds consider ' +\r\n      'reconsider such that and in provided of as from be being by means ' +\r\n      'equals implies iff redefine define now not or attr is mode ' +\r\n      'suppose per cases set thesis contradiction scheme reserve struct ' +\r\n      'correctness compatibility coherence symmetry assymetry ' +\r\n      'reflexivity irreflexivity connectedness uniqueness commutativity ' +\r\n      'idempotence involutiveness projectivity',\r\n    contains: [\r\n      hljs.COMMENT('::', '$')\r\n    ]\r\n  };\r\n};"},"lineCount":18}},"error":null,"hash":"2a75f5f37ca07c1244e00e7fdf9927ac","cacheData":{"env":{}}}