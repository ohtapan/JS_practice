{"id":"../node_modules/highlight.js/lib/languages/nimrod.js","dependencies":[{"name":"C:\\home\\JS_practice\\package.json","includedInParent":true,"mtime":1559541468139},{"name":"C:\\home\\JS_practice\\node_modules\\highlight.js\\package.json","includedInParent":true,"mtime":1559541462771}],"generated":{"js":"module.exports = function(hljs) {\r\n  return {\r\n    aliases: ['nim'],\r\n    keywords: {\r\n      keyword:\r\n        'addr and as asm bind block break case cast const continue converter ' +\r\n        'discard distinct div do elif else end enum except export finally ' +\r\n        'for from generic if import in include interface is isnot iterator ' +\r\n        'let macro method mixin mod nil not notin object of or out proc ptr ' +\r\n        'raise ref return shl shr static template try tuple type using var ' +\r\n        'when while with without xor yield',\r\n      literal:\r\n        'shared guarded stdin stdout stderr result true false',\r\n      built_in:\r\n        'int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 float ' +\r\n        'float32 float64 bool char string cstring pointer expr stmt void ' +\r\n        'auto any range array openarray varargs seq set clong culong cchar ' +\r\n        'cschar cshort cint csize clonglong cfloat cdouble clongdouble ' +\r\n        'cuchar cushort cuint culonglong cstringarray semistatic'\r\n    },\r\n    contains: [ {\r\n        className: 'meta', // Actually pragma\r\n        begin: /{\\./,\r\n        end: /\\.}/,\r\n        relevance: 10\r\n      }, {\r\n        className: 'string',\r\n        begin: /[a-zA-Z]\\w*\"/,\r\n        end: /\"/,\r\n        contains: [{begin: /\"\"/}]\r\n      }, {\r\n        className: 'string',\r\n        begin: /([a-zA-Z]\\w*)?\"\"\"/,\r\n        end: /\"\"\"/\r\n      },\r\n      hljs.QUOTE_STRING_MODE,\r\n      {\r\n        className: 'type',\r\n        begin: /\\b[A-Z]\\w+\\b/,\r\n        relevance: 0\r\n      }, {\r\n        className: 'number',\r\n        relevance: 0,\r\n        variants: [\r\n          {begin: /\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/},\r\n          {begin: /\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/},\r\n          {begin: /\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/},\r\n          {begin: /\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?/}\r\n        ]\r\n      },\r\n      hljs.HASH_COMMENT_MODE\r\n    ]\r\n  }\r\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/highlight.js/lib/languages/nimrod.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}}],"sources":{"../node_modules/highlight.js/lib/languages/nimrod.js":"module.exports = function(hljs) {\r\n  return {\r\n    aliases: ['nim'],\r\n    keywords: {\r\n      keyword:\r\n        'addr and as asm bind block break case cast const continue converter ' +\r\n        'discard distinct div do elif else end enum except export finally ' +\r\n        'for from generic if import in include interface is isnot iterator ' +\r\n        'let macro method mixin mod nil not notin object of or out proc ptr ' +\r\n        'raise ref return shl shr static template try tuple type using var ' +\r\n        'when while with without xor yield',\r\n      literal:\r\n        'shared guarded stdin stdout stderr result true false',\r\n      built_in:\r\n        'int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 float ' +\r\n        'float32 float64 bool char string cstring pointer expr stmt void ' +\r\n        'auto any range array openarray varargs seq set clong culong cchar ' +\r\n        'cschar cshort cint csize clonglong cfloat cdouble clongdouble ' +\r\n        'cuchar cushort cuint culonglong cstringarray semistatic'\r\n    },\r\n    contains: [ {\r\n        className: 'meta', // Actually pragma\r\n        begin: /{\\./,\r\n        end: /\\.}/,\r\n        relevance: 10\r\n      }, {\r\n        className: 'string',\r\n        begin: /[a-zA-Z]\\w*\"/,\r\n        end: /\"/,\r\n        contains: [{begin: /\"\"/}]\r\n      }, {\r\n        className: 'string',\r\n        begin: /([a-zA-Z]\\w*)?\"\"\"/,\r\n        end: /\"\"\"/\r\n      },\r\n      hljs.QUOTE_STRING_MODE,\r\n      {\r\n        className: 'type',\r\n        begin: /\\b[A-Z]\\w+\\b/,\r\n        relevance: 0\r\n      }, {\r\n        className: 'number',\r\n        relevance: 0,\r\n        variants: [\r\n          {begin: /\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/},\r\n          {begin: /\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/},\r\n          {begin: /\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/},\r\n          {begin: /\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?/}\r\n        ]\r\n      },\r\n      hljs.HASH_COMMENT_MODE\r\n    ]\r\n  }\r\n};"},"lineCount":54}},"error":null,"hash":"be235428d819440cbfeb071f25e6b0c4","cacheData":{"env":{}}}